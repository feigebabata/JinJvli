// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameLobby.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GamePlay.GameLobby {

  /// <summary>Holder for reflection information generated from GameLobby.proto</summary>
  public static partial class GameLobbyReflection {

    #region Descriptor
    /// <summary>File descriptor for GameLobby.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameLobbyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9HYW1lTG9iYnkucHJvdG8SEkdhbWVQbGF5LkdhbWVMb2JieSJ1Cg1QQl9P",
            "bmxpbmVHYW1lEhIKCkdhbWVQbGF5SUQYASABKAUSDgoGR2FtZUlEGAIgASgF",
            "EjEKBlBsYXllchgDIAEoCzIhLkdhbWVQbGF5LkdhbWVMb2JieS5QQl9QbGF5",
            "ZXJJbmZvEg0KBVJlYWR5GAQgASgIIi0KDVBCX1BsYXllckluZm8SEAoITmlj",
            "a25hbWUYASABKAkSCgoCSUQYAiABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GamePlay.GameLobby.PB_OnlineGame), global::GamePlay.GameLobby.PB_OnlineGame.Parser, new[]{ "GamePlayID", "GameID", "Player", "Ready" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GamePlay.GameLobby.PB_PlayerInfo), global::GamePlay.GameLobby.PB_PlayerInfo.Parser, new[]{ "Nickname", "ID" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PB_OnlineGame : pb::IMessage<PB_OnlineGame> {
    private static readonly pb::MessageParser<PB_OnlineGame> _parser = new pb::MessageParser<PB_OnlineGame>(() => new PB_OnlineGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_OnlineGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GamePlay.GameLobby.GameLobbyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_OnlineGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_OnlineGame(PB_OnlineGame other) : this() {
      gamePlayID_ = other.gamePlayID_;
      gameID_ = other.gameID_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      ready_ = other.ready_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_OnlineGame Clone() {
      return new PB_OnlineGame(this);
    }

    /// <summary>Field number for the "GamePlayID" field.</summary>
    public const int GamePlayIDFieldNumber = 1;
    private int gamePlayID_;
    /// <summary>
    ///房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GamePlayID {
      get { return gamePlayID_; }
      set {
        gamePlayID_ = value;
      }
    }

    /// <summary>Field number for the "GameID" field.</summary>
    public const int GameIDFieldNumber = 2;
    private int gameID_;
    /// <summary>
    ///游戏id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameID {
      get { return gameID_; }
      set {
        gameID_ = value;
      }
    }

    /// <summary>Field number for the "Player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::GamePlay.GameLobby.PB_PlayerInfo player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GamePlay.GameLobby.PB_PlayerInfo Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "Ready" field.</summary>
    public const int ReadyFieldNumber = 4;
    private bool ready_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ready {
      get { return ready_; }
      set {
        ready_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_OnlineGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_OnlineGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GamePlayID != other.GamePlayID) return false;
      if (GameID != other.GameID) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (Ready != other.Ready) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GamePlayID != 0) hash ^= GamePlayID.GetHashCode();
      if (GameID != 0) hash ^= GameID.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (Ready != false) hash ^= Ready.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GamePlayID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GamePlayID);
      }
      if (GameID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameID);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      if (Ready != false) {
        output.WriteRawTag(32);
        output.WriteBool(Ready);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GamePlayID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GamePlayID);
      }
      if (GameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameID);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (Ready != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_OnlineGame other) {
      if (other == null) {
        return;
      }
      if (other.GamePlayID != 0) {
        GamePlayID = other.GamePlayID;
      }
      if (other.GameID != 0) {
        GameID = other.GameID;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::GamePlay.GameLobby.PB_PlayerInfo();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.Ready != false) {
        Ready = other.Ready;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GamePlayID = input.ReadInt32();
            break;
          }
          case 16: {
            GameID = input.ReadInt32();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::GamePlay.GameLobby.PB_PlayerInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 32: {
            Ready = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_PlayerInfo : pb::IMessage<PB_PlayerInfo> {
    private static readonly pb::MessageParser<PB_PlayerInfo> _parser = new pb::MessageParser<PB_PlayerInfo>(() => new PB_PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GamePlay.GameLobby.GameLobbyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_PlayerInfo(PB_PlayerInfo other) : this() {
      nickname_ = other.nickname_;
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_PlayerInfo Clone() {
      return new PB_PlayerInfo(this);
    }

    /// <summary>Field number for the "Nickname" field.</summary>
    public const int NicknameFieldNumber = 1;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 2;
    private string iD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nickname != other.Nickname) return false;
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nickname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nickname);
      }
      if (ID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nickname = input.ReadString();
            break;
          }
          case 18: {
            ID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
