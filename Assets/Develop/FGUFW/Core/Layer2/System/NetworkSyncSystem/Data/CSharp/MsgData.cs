// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Develop/FGUFW/Core/Layer2/System/NetworkSyncSystem/Data/MsgData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FGUFW.Core {

  /// <summary>Holder for reflection information generated from Develop/FGUFW/Core/Layer2/System/NetworkSyncSystem/Data/MsgData.proto</summary>
  public static partial class MsgDataReflection {

    #region Descriptor
    /// <summary>File descriptor for Develop/FGUFW/Core/Layer2/System/NetworkSyncSystem/Data/MsgData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MsgDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkVEZXZlbG9wL0ZHVUZXL0NvcmUvTGF5ZXIyL1N5c3RlbS9OZXR3b3JrU3lu",
            "Y1N5c3RlbS9EYXRhL01zZ0RhdGEucHJvdG8SCkZHVUZXLkNvcmUiTQoIUEJf",
            "RnJhbWUSDQoFSW5kZXgYASABKAUSEgoKUGxhY2VJbmRleBgCIAEoBRIMCgRD",
            "bWRzGAMgAygNEhAKCE1zZ0RhdGFzGAQgAygMIi0KDVBCX1BsYXllckluZm8S",
            "EAoITmlja25hbWUYASABKAkSCgoCSUQYAiABKAkiTgoJUEJfUGxheWVyEi0K",
            "ClBsYXllckluZm8YASABKAsyGS5GR1VGVy5Db3JlLlBCX1BsYXllckluZm8S",
            "EgoKUGxhY2VJbmRleBgCIAEoBSJaCgxQQl9HYW1lU3RhcnQSEgoKR2FtZVBs",
            "YXlJRBgBIAEoAxIOCgZHYW1lSUQYAiABKAUSJgoHUGxheWVycxgDIAMoCzIV",
            "LkZHVUZXLkNvcmUuUEJfUGxheWVyIiIKDFBCX0dhbWVSZWFkeRISCgpQbGFj",
            "ZUluZGV4GAEgASgFInUKDVBCX09ubGluZUdhbWUSEgoKR2FtZVBsYXlJRBgB",
            "IAEoAxIOCgZHYW1lSUQYAiABKAUSJgoHUGxheWVycxgDIAMoCzIVLkZHVUZX",
            "LkNvcmUuUEJfUGxheWVyEgoKAklQGAQgASgJEgwKBFBvcnQYBSABKAUiPAoL",
            "UEJfSm9pbkdhbWUSLQoKUGxheWVySW5mbxgBIAEoCzIZLkZHVUZXLkNvcmUu",
            "UEJfUGxheWVySW5mb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_Frame), global::FGUFW.Core.PB_Frame.Parser, new[]{ "Index", "PlaceIndex", "Cmds", "MsgDatas" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_PlayerInfo), global::FGUFW.Core.PB_PlayerInfo.Parser, new[]{ "Nickname", "ID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_Player), global::FGUFW.Core.PB_Player.Parser, new[]{ "PlayerInfo", "PlaceIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_GameStart), global::FGUFW.Core.PB_GameStart.Parser, new[]{ "GamePlayID", "GameID", "Players" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_GameReady), global::FGUFW.Core.PB_GameReady.Parser, new[]{ "PlaceIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_OnlineGame), global::FGUFW.Core.PB_OnlineGame.Parser, new[]{ "GamePlayID", "GameID", "Players", "IP", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FGUFW.Core.PB_JoinGame), global::FGUFW.Core.PB_JoinGame.Parser, new[]{ "PlayerInfo" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PB_Frame : pb::IMessage<PB_Frame> {
    private static readonly pb::MessageParser<PB_Frame> _parser = new pb::MessageParser<PB_Frame>(() => new PB_Frame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_Frame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_Frame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_Frame(PB_Frame other) : this() {
      index_ = other.index_;
      placeIndex_ = other.placeIndex_;
      cmds_ = other.cmds_.Clone();
      msgDatas_ = other.msgDatas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_Frame Clone() {
      return new PB_Frame(this);
    }

    /// <summary>Field number for the "Index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "PlaceIndex" field.</summary>
    public const int PlaceIndexFieldNumber = 2;
    private int placeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlaceIndex {
      get { return placeIndex_; }
      set {
        placeIndex_ = value;
      }
    }

    /// <summary>Field number for the "Cmds" field.</summary>
    public const int CmdsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_cmds_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> cmds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Cmds {
      get { return cmds_; }
    }

    /// <summary>Field number for the "MsgDatas" field.</summary>
    public const int MsgDatasFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_msgDatas_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> msgDatas_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> MsgDatas {
      get { return msgDatas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_Frame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_Frame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (PlaceIndex != other.PlaceIndex) return false;
      if(!cmds_.Equals(other.cmds_)) return false;
      if(!msgDatas_.Equals(other.msgDatas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (PlaceIndex != 0) hash ^= PlaceIndex.GetHashCode();
      hash ^= cmds_.GetHashCode();
      hash ^= msgDatas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (PlaceIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlaceIndex);
      }
      cmds_.WriteTo(output, _repeated_cmds_codec);
      msgDatas_.WriteTo(output, _repeated_msgDatas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (PlaceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaceIndex);
      }
      size += cmds_.CalculateSize(_repeated_cmds_codec);
      size += msgDatas_.CalculateSize(_repeated_msgDatas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_Frame other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.PlaceIndex != 0) {
        PlaceIndex = other.PlaceIndex;
      }
      cmds_.Add(other.cmds_);
      msgDatas_.Add(other.msgDatas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            PlaceIndex = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cmds_.AddEntriesFrom(input, _repeated_cmds_codec);
            break;
          }
          case 34: {
            msgDatas_.AddEntriesFrom(input, _repeated_msgDatas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_PlayerInfo : pb::IMessage<PB_PlayerInfo> {
    private static readonly pb::MessageParser<PB_PlayerInfo> _parser = new pb::MessageParser<PB_PlayerInfo>(() => new PB_PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_PlayerInfo(PB_PlayerInfo other) : this() {
      nickname_ = other.nickname_;
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_PlayerInfo Clone() {
      return new PB_PlayerInfo(this);
    }

    /// <summary>Field number for the "Nickname" field.</summary>
    public const int NicknameFieldNumber = 1;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 2;
    private string iD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nickname != other.Nickname) return false;
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nickname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nickname);
      }
      if (ID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nickname = input.ReadString();
            break;
          }
          case 18: {
            ID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_Player : pb::IMessage<PB_Player> {
    private static readonly pb::MessageParser<PB_Player> _parser = new pb::MessageParser<PB_Player>(() => new PB_Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_Player(PB_Player other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      placeIndex_ = other.placeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_Player Clone() {
      return new PB_Player(this);
    }

    /// <summary>Field number for the "PlayerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::FGUFW.Core.PB_PlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FGUFW.Core.PB_PlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "PlaceIndex" field.</summary>
    public const int PlaceIndexFieldNumber = 2;
    private int placeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlaceIndex {
      get { return placeIndex_; }
      set {
        placeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (PlaceIndex != other.PlaceIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (PlaceIndex != 0) hash ^= PlaceIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (PlaceIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PlaceIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (PlaceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaceIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_Player other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::FGUFW.Core.PB_PlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.PlaceIndex != 0) {
        PlaceIndex = other.PlaceIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::FGUFW.Core.PB_PlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 16: {
            PlaceIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_GameStart : pb::IMessage<PB_GameStart> {
    private static readonly pb::MessageParser<PB_GameStart> _parser = new pb::MessageParser<PB_GameStart>(() => new PB_GameStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_GameStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GameStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GameStart(PB_GameStart other) : this() {
      gamePlayID_ = other.gamePlayID_;
      gameID_ = other.gameID_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GameStart Clone() {
      return new PB_GameStart(this);
    }

    /// <summary>Field number for the "GamePlayID" field.</summary>
    public const int GamePlayIDFieldNumber = 1;
    private long gamePlayID_;
    /// <summary>
    ///房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GamePlayID {
      get { return gamePlayID_; }
      set {
        gamePlayID_ = value;
      }
    }

    /// <summary>Field number for the "GameID" field.</summary>
    public const int GameIDFieldNumber = 2;
    private int gameID_;
    /// <summary>
    ///游戏id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameID {
      get { return gameID_; }
      set {
        gameID_ = value;
      }
    }

    /// <summary>Field number for the "Players" field.</summary>
    public const int PlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FGUFW.Core.PB_Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(26, global::FGUFW.Core.PB_Player.Parser);
    private readonly pbc::RepeatedField<global::FGUFW.Core.PB_Player> players_ = new pbc::RepeatedField<global::FGUFW.Core.PB_Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FGUFW.Core.PB_Player> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_GameStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_GameStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GamePlayID != other.GamePlayID) return false;
      if (GameID != other.GameID) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GamePlayID != 0L) hash ^= GamePlayID.GetHashCode();
      if (GameID != 0) hash ^= GameID.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GamePlayID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(GamePlayID);
      }
      if (GameID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameID);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GamePlayID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GamePlayID);
      }
      if (GameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameID);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_GameStart other) {
      if (other == null) {
        return;
      }
      if (other.GamePlayID != 0L) {
        GamePlayID = other.GamePlayID;
      }
      if (other.GameID != 0) {
        GameID = other.GameID;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GamePlayID = input.ReadInt64();
            break;
          }
          case 16: {
            GameID = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家准备 所有玩家准备才会开始
  /// </summary>
  public sealed partial class PB_GameReady : pb::IMessage<PB_GameReady> {
    private static readonly pb::MessageParser<PB_GameReady> _parser = new pb::MessageParser<PB_GameReady>(() => new PB_GameReady());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_GameReady> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GameReady() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GameReady(PB_GameReady other) : this() {
      placeIndex_ = other.placeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GameReady Clone() {
      return new PB_GameReady(this);
    }

    /// <summary>Field number for the "PlaceIndex" field.</summary>
    public const int PlaceIndexFieldNumber = 1;
    private int placeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlaceIndex {
      get { return placeIndex_; }
      set {
        placeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_GameReady);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_GameReady other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlaceIndex != other.PlaceIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlaceIndex != 0) hash ^= PlaceIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlaceIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlaceIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlaceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlaceIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_GameReady other) {
      if (other == null) {
        return;
      }
      if (other.PlaceIndex != 0) {
        PlaceIndex = other.PlaceIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlaceIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_OnlineGame : pb::IMessage<PB_OnlineGame> {
    private static readonly pb::MessageParser<PB_OnlineGame> _parser = new pb::MessageParser<PB_OnlineGame>(() => new PB_OnlineGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_OnlineGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_OnlineGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_OnlineGame(PB_OnlineGame other) : this() {
      gamePlayID_ = other.gamePlayID_;
      gameID_ = other.gameID_;
      players_ = other.players_.Clone();
      iP_ = other.iP_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_OnlineGame Clone() {
      return new PB_OnlineGame(this);
    }

    /// <summary>Field number for the "GamePlayID" field.</summary>
    public const int GamePlayIDFieldNumber = 1;
    private long gamePlayID_;
    /// <summary>
    ///房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GamePlayID {
      get { return gamePlayID_; }
      set {
        gamePlayID_ = value;
      }
    }

    /// <summary>Field number for the "GameID" field.</summary>
    public const int GameIDFieldNumber = 2;
    private int gameID_;
    /// <summary>
    ///游戏id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GameID {
      get { return gameID_; }
      set {
        gameID_ = value;
      }
    }

    /// <summary>Field number for the "Players" field.</summary>
    public const int PlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FGUFW.Core.PB_Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(26, global::FGUFW.Core.PB_Player.Parser);
    private readonly pbc::RepeatedField<global::FGUFW.Core.PB_Player> players_ = new pbc::RepeatedField<global::FGUFW.Core.PB_Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FGUFW.Core.PB_Player> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "IP" field.</summary>
    public const int IPFieldNumber = 4;
    private string iP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IP {
      get { return iP_; }
      set {
        iP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Port" field.</summary>
    public const int PortFieldNumber = 5;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_OnlineGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_OnlineGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GamePlayID != other.GamePlayID) return false;
      if (GameID != other.GameID) return false;
      if(!players_.Equals(other.players_)) return false;
      if (IP != other.IP) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GamePlayID != 0L) hash ^= GamePlayID.GetHashCode();
      if (GameID != 0) hash ^= GameID.GetHashCode();
      hash ^= players_.GetHashCode();
      if (IP.Length != 0) hash ^= IP.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GamePlayID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(GamePlayID);
      }
      if (GameID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GameID);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (IP.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IP);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GamePlayID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GamePlayID);
      }
      if (GameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GameID);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (IP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IP);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_OnlineGame other) {
      if (other == null) {
        return;
      }
      if (other.GamePlayID != 0L) {
        GamePlayID = other.GamePlayID;
      }
      if (other.GameID != 0) {
        GameID = other.GameID;
      }
      players_.Add(other.players_);
      if (other.IP.Length != 0) {
        IP = other.IP;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GamePlayID = input.ReadInt64();
            break;
          }
          case 16: {
            GameID = input.ReadInt32();
            break;
          }
          case 26: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 34: {
            IP = input.ReadString();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_JoinGame : pb::IMessage<PB_JoinGame> {
    private static readonly pb::MessageParser<PB_JoinGame> _parser = new pb::MessageParser<PB_JoinGame>(() => new PB_JoinGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_JoinGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FGUFW.Core.MsgDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_JoinGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_JoinGame(PB_JoinGame other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_JoinGame Clone() {
      return new PB_JoinGame(this);
    }

    /// <summary>Field number for the "PlayerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::FGUFW.Core.PB_PlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FGUFW.Core.PB_PlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_JoinGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_JoinGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_JoinGame other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::FGUFW.Core.PB_PlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::FGUFW.Core.PB_PlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
